# Chess.Simple
' LeonardPauli/chess
	Created by Leonard Pauli, 14 sept 2018
	some notes inspired by discussion during indataplusplus lesson

' changes:
	- using initial index 0 instead of common verbal index 1
		eg. for row, rank, etc


product usage:
	- include Chess.jar as lib (?)
	- import ChessGame from package "com.leonardpauli.experiments.boardgame.chess.simple"
	- instantiate
		ChessGame game = new ChessGame()
	- get whose players turn it is
		Player player = game.getCurrentPlayer()
	- try faulty move
		Piece piece = board.pieceAt("A2")
		Position destination = new Position.fromString("A4")
		Movement movement = board.movement.getAvailable(piece, destination).get(0)
		game.playMove(new Move(player, piece, movement))
		' variants:
			- move not available to piece
			- to occupied tile
			- wrong player
			- to non-existent tile
			- during check
			- after too much time (if time mode enabled)
			- Position(code).test: wrong format to position code
				- outside range
				- empty
				- long
				- faulty char conversion to int
	- try ok move // like above but different pos
		- make sure all movements are tried, inc. casteling
	- load board + next player turn (currentPlayer) from string
	- save board to string
	- load game from standard movement codes
	- save game to standard movement codes
	- try undo:
		game.playMove(game.rounds.last().moves.last().getReverseMove())
		// TODO: how to interact with times? Restart timer?



	- automated tests using online db chess notations + expected resulting boards
	- test piece placements
	- test by board formatted as unicode strings
	- fix all access policies

tests:
	- getCurrentPlayer
		instantiate
		is players[0]
		do move
		is players[1]
		do move
		is players[0]
	- boardPlain
		Board board = new Board();
		assert(board.toString(), "
			  ╭────────────────────────╮
			8 │ .     .     .     .    │
			7 │    .     .     .     . │
			6 │ .     .     .     .    │
			5 │    .     .     .     . │
			4 │ .     .     .     .    │
			3 │    .     .     .     . │
			2 │ .     .     .     .    │
			1 │    .     .     .     . │
			  ╰────────────────────────╯
			    A  B  C  D  E  F  G  H
	- boardAtStart
		instantiate
		assert(game.board.toString(), "
			  ╭────────────────────────╮
			8 │ ♖  ♘  ♗  ♔  ♕  ♗  ♘  ♖ │
			7 │ ♙  ♙  ♙  ♙  ♙  ♙  ♙  ♙ │
			6 │ .     .     .     .    │
			5 │    .     .     .     . │
			4 │ .     .     .     .    │
			3 │    .     .     .     . │
			2 │ ♟  ♟  ♟  ♟  ♟  ♟  ♟  ♟ │
			1 │ ♜  ♞  ♝  ♚  ♛  ♝  ♞  ♜ │
			  ╰────────────────────────╯
			    A  B  C  D  E  F  G  H
	- board.setupTileEdges
	- tileExistsAt
	- ...



' Chess.Simple
		movesPerPlayerAndRound is Int: 1
		playersCountTarget is Int: 2
		constructor () {
		}
	MovementType
		name is String